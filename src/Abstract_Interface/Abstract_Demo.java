package Abstract_Interface;

/**
 * 定义一个抽象类，实现计算面积
 * 抽象类可以实现如必须具备把方法都实现才能实例化
 * 如线的长度，面积，体积——长方形的周长，面积，体积——长方体的周长，面积，体积
 * 抽象类是对一种事物的抽象，即对类抽。.抽象类是对整个类整体进行抽象，包括属性、行为。
 * Java抽象类和Java接口一样，都用来声明一个新的类型。并且作为一个类型的等级结构的起点。
 */

public   class Abstract_Demo {
    public static void main(String[]args){
        //创建父类发现无法实例化
       // Shape sp = new Shape(1,2);

        //创建方形
        Square sq = new Square(12,44);
        System.out.println(sq.getArea());
        //创建三角形
        Triangle tr = new Triangle(23,45);
        System.out.println(tr.getArea());

    }

}
/*
注意事项：
A：抽象类中不一定有抽象方法，但是有抽象方法的类一定要定义为抽象类。
B:在Java语言中，类有两种，一种是具体类，另一种是抽象类。
具体类可以实例化，抽象类不可以实例化。
C：对于抽象类，如果需要添加新的方法，可以直接在抽象类中添加具体的实现，子类可以不进行变更；
D：抽象方法只有声明，没有具体的实现。抽象类是为了继承而存在的，如果你定义了一个抽象类，却不去继承它，就等于白白的创建了这个类。
E：对于一个父类，如果它的一个方法在父类中实现没有任何意义，必须根据子类的实际需求来进行不同的实现，那么就可以将这个方法声明为abstract方法，此时这个类也就成为了abstract抽象类。
 */

